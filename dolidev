#!/usr/bin/env bash

# shellcheck disable=SC2164

set -euo pipefail

up_dolidev() {
  OPTS=$($GETOPT_CMD --long seed,pull -- "$@")

  local SEED=0
  local PULL=0

  eval set -- "$OPTS"

  while true ; do
    case "$1" in
      --seed) SEED=1 ; shift ;;
      --pull) PULL=1 ; shift ;;
      --) shift ; break ;;
      *) echo "Internal error!" ; exit 1 ;;
    esac
  done

  install_dolibarr "$DOLIBARR_VERSION" "$PULL"
  configure_dolibarr

  echo "Starting the Dolibarr instance."
  $COMPOSE_CMD --env-file "./$ENV_FILE" --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" up -d --build

  if [[ "$SEED" -eq 1 ]]; then
    echo "Seeding the database."
    sleep 7

    # Clean any suffix from dolibarr version to keep only upstream versioning
    CLEAN_DOLIBARR_VERSION=$(echo "$DOLIBARR_VERSION" | cut -d'_' -f1)

    seed_dolibarr "$CLEAN_DOLIBARR_VERSION"
  fi

  echo ""
  echo "The Dolibarr is available at http://localhost:${FORWARD_WEB_PORT:-80}"
  echo "The PHPMyAdmin is available at http://localhost:${FORWARD_PMA_PORT:-8080}"
  echo "The MailHog web interface is available at http://localhost:${FORWARD_MAILHOG_PORT:-8025}"
  echo ""
  echo "You can login on Dolibarr using admin:password credentials"
  echo "You can login on PHPMyAdmin using $DB_USERNAME:$DB_PASSWORD credentials"
}

down_dolidev() {
  OPTS=$($GETOPT_CMD --long rm -- "$@")

  local RM=0

  eval set -- "$OPTS"

  while true ; do
    case "$1" in
      --rm) RM=1 ; shift ;;
      --) shift ; break ;;
      *) echo "Internal error!" ; exit 1 ;;
    esac
  done

  if [ "$RM" -eq 0 ]; then
    echo "Stopping the Dolibarr instance."
    $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" down
  else
    echo "Removing the Dolibarr instance."
    $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" down

    echo "Wipping files on disk."
    rm -rf dolibarr
  fi
}

install_dolibarr() {
  if [ -d "$DOLIBARR_FOLDER" ]; then
    echo "Updating existing Dolibarr instance to v$1"
    (
      cd "$DOLIBARR_FOLDER"
      if [ "$2" -eq 1 ]; then
        git pull --rebase --autostash
      fi
      git checkout "$1"
    )
  else
    echo "Installing Dolibarr v$1 from $DOLIBARR_URL into ./$DOLIBARR_FOLDER"
    git clone -b "$1" "$DOLIBARR_URL" "$DOLIBARR_FOLDER"
  fi

  # Create documents folder if missing
  mkdir -p "$DOLIBARR_FOLDER/documents"
}

configure_dolibarr() {
  cp "$DOLIBARR_FOLDER/htdocs/conf/conf.php.example" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"

  $SED_CMD -i "s/dolibarr_main_url_root=''/dolibarr_main_url_root='http:\/\/localhost'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_document_root=''/dolibarr_main_document_root='\/var\/www\/html\/htdocs'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_data_root=''/dolibarr_main_data_root='\/var\/documents'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_host=''/dolibarr_main_db_host='db'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_name=''/dolibarr_main_db_name='$DB_DATABASE'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_user=''/dolibarr_main_db_user='$DB_USERNAME'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_pass=''/dolibarr_main_db_pass='$DB_PASSWORD'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_type=''/dolibarr_main_db_type='mysqli'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s/dolibarr_main_db_type=''/dolibarr_main_db_type='mysqli'/g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
  $SED_CMD -i "s#//\$dolibarr_main_url_root_alt=#\$dolibarr_main_url_root_alt=#g" "$DOLIBARR_FOLDER/htdocs/conf/conf.php"
}

seed_dolibarr() {
  # Recreate the database first
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec --interactive db mysql -u"$DB_USERNAME" -p"$DB_PASSWORD" -e "DROP DATABASE IF EXISTS $DB_DATABASE"
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec --interactive db mysql -u"$DB_USERNAME" -p"$DB_PASSWORD" -e "CREATE DATABASE $DB_DATABASE"

  # Run the seeders
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec -T db mysql -u"$DB_USERNAME" -p"$DB_PASSWORD" "$DB_DATABASE" <"./$DOLIBARR_FOLDER/dev/initdemo/mysqldump_dolibarr_$1.0.sql"
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec -T db mysql -u"$DB_USERNAME" -p"$DB_PASSWORD" "$DB_DATABASE" <"./docker/seed.sql"

  # Set password as 'password' for all users
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec -T db mysql -u"$DB_USERNAME" -p"$DB_PASSWORD" "$DB_DATABASE" --execute "UPDATE llx_user SET pass = \"password\" WHERE 1"
}

run_compose() {
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" "$@"
}

run_shell() {
  $COMPOSE_CMD --project-directory docker -p "dolidev_$DOLIBARR_FOLDER" exec php sh
}

###
### Main ###
###

# Determinate which env file to use
if [ -z ${2+x} ]; then
  ENV_FILE=".env"
  DOLIBARR_FOLDER="dolibarr"
else
  ENV_FILE=".env.$2"
  DOLIBARR_FOLDER="$(echo "$2" | cut -d'.' -f3)"
fi
export DOLIBARR_FOLDER

# shellcheck disable=SC1090
source "$ENV_FILE"

GETOPT_CMD="${GETOPT_CMD:-getopt}"
SED_CMD="${SED_CMD:-sed}"
DOLIBARR_URL="${DOLIBARR_URL:-https://github.com/Dolibarr/dolibarr}"
DOLIBARR_VERSION="${DOLIBARR_VERSION:-17.0}"
COMPOSE_CMD="${COMPOSE_CMD:-docker-compose}"

if [ "$1" == "up" ]; then
  up_dolidev "$@"
elif [ "$1" == "down" ]; then
  down_dolidev "$@"
elif [ "$1" == "sh" ]; then
  run_shell
else
  run_compose "$@"
fi
